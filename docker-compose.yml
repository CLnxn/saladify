services:
  db:
    image: postgres:alpine 
    container_name: postgres_db 
    restart: always
    env_file:
      - ./backend/.env
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_DB: ${POSTGRES_DB}
      TZ: Asia/Singapore
    ports:
      - ${POSTGRES_PORT}:${POSTGRES_PORT}
    volumes:
      - ./data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d $POSTGRES_DB $POSTGRES_USER"]
      interval: 1s 
      timeout: 5s
      retries: 5
  backend_server: 
    # restart: always
    depends_on:
      - db
    build: ./backend
    ports: 
      - ${BACKEND_PORT}:${BACKEND_PORT}
    env_file:
      - ./backend/.env
    environment:
      TIDE_SECRET: ${TIDE_SECRET}
      DATABASE_URL: "postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db/${POSTGRES_DB}" 
      PORT: ${PORT}
      IP_ADDRESS: ${IP_ADDRESS}
      TZ: Asia/Singapore
  frontend_server:
    # restart: always
    build: ./frontend
    depends_on:
      - backend_server
    ports: 
      - ${FRONTEND_PORT}:${FRONTEND_PORT}
    env_file:
      - ./frontend/.env

    


